apiVersion: v1
kind: ConfigMap
metadata:
  name: app-api-configmap
data:
  application.properties: |
    ## ==> Database Mysql
    config.prod=true
    spring.jpa.database=mysql
    spring.datasource.url=jdbc:mysql://203.159.93.221:3307/spring_3_db?useUnicode=yes&characterEncoding=UTF-8
    spring.datasource.username=root
    spring.datasource.password=depth1
    spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
    spring.datasource.hikari.connection-timeout=20000
    spring.datasource.hikari.maximum-pool-size=10
    spring.datasource.hikari.minimum-idle=2
    spring.datasource.hikari.idle-timeout=30000
    spring.datasource.hikari.max-lifetime=600000
    spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
    spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    spring.jpa.hibernate.ddl-auto=update
    ## ==> log
    logging.file.name=./storage/logs/app.log
    ## ==> Upload
    defaultUploadPath=./storage/upload_file
    # ==>JavaMelody
    javamelody.enabled=true
    javamelody.storage-directory=/opt/javamelody
    javamelody.no-database=true
    management.endpoints.web.exposure.include=*
    management.endpoint.metrics.enabled=true
    management.endpoint.prometheus.enabled=true
    management.endpoint.health.show-details=always
    allow.origin.host1=http://localhost:4000
    allow.origin.host2=http://localhost:4444
    allow.origin.host3=http://localhost:8080


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-api-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app-api-deployment
  template:
    metadata:
      labels:
        app: app-api-deployment
    spec:
      containers:
        - name: app-api-deployment
          image: teerawutkt/sprint3-jwt:latest
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: config-volume
              mountPath: /config
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: app-api-configmap

---

apiVersion: v1
kind: Service
metadata:
  name: app-api-service
spec:
  selector:
    app: app-api-deployment
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-api-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: localhost
      http:
        paths:
          - path: /app
            pathType: Prefix
            backend:
              service:
                name: app-api-service
                port:
                  number: 80
